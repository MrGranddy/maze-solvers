import argparse

from maze_generator import MazeGenerator
from maze_solvers import DeadendSolver

if __name__ == "__main__":

    parser = argparse.ArgumentParser(description="Maze Solver")
    parser.add_argument("solver", type=str, help="Solver to use.", choices=["deadend"])
    parser.add_argument(
        "--maze",
        type=str,
        help="Maze to solve, generated by maze_generator.py or in the same format",
    )
    parser.add_argument(
        "--width", type=int, help="Width of the maze. (Used if maze is not provided)"
    )
    parser.add_argument(
        "--height", type=int, help="Height of the maze. (Used if maze is not provided)"
    )
    parser.add_argument(
        "--seed",
        type=int,
        help="Seed for the RNG. (Used if maze is not provided)",
    )
    parser.add_argument("--output", type=str, help="Solved maze output file")

    args = parser.parse_args()

    if args.maze:
        with open(args.maze, "r", encoding="utf-8") as f:
            maze = f.read()

    else:
        MazeGen = MazeGenerator(args.width, args.height, args.seed)
        maze = MazeGen()


    if args.solver == "deadend":
        
        solver = DeadendSolver()
        solved_maze = solver(maze)